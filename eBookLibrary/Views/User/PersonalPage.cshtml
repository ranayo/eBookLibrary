@model List<eBookLibrary.Models.PersonalLibraryViewModel>

<div class="container my-5">
    <h2 class="text-center mb-5 text-primary">My Personal Library</h2>

    <!-- Button to go back to All Books page -->
    <div class="text-end mb-4">
        <a href="/Books/Index" class="btn btn-outline-primary">
            <i class="bi bi-arrow-left"></i> Back to All Books
        </a>
    </div>

    <!-- Display TempData Messages -->
    @if (TempData["Message"] != null)
    {
        <div class="alert alert-success alert-dismissible fade show" role="alert">
            <strong>Success:</strong> @TempData["Message"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }
    @if (TempData["Error"] != null)
    {
        <div class="alert alert-danger alert-dismissible fade show" role="alert">
            <strong>Error:</strong> @TempData["Error"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    <!-- Debug Information -->
    @if (Model == null)
    {
        <div class="alert alert-danger text-center">
            <strong>Error:</strong> No data found. Please ensure the controller is passing the correct data.
        </div>
    }
    else if (!Model.Any())
    {
        <div class="alert alert-info text-center">
            <strong>Your personal library is empty.</strong>
        </div>
    }
    else
    {
        <p class="text-muted text-center mb-4">You have <strong>@Model.Count</strong> book(s) in your library.</p>

        <div class="row g-4">
            @foreach (var book in Model)
            {
                <div class="col-md-6 col-lg-4">
                    <div class="card shadow-sm h-100">
                        <!-- Book Cover -->
                        <img src="@Url.Content("~/Content/Images/Cover" + book.CoverImagePath)"
                             class="card-img-top img-fluid"
                             alt="@book.Title"
                             style="height: 250px; object-fit: cover;" />

                        <!-- Book Details -->
                        <div class="card-body d-flex flex-column">
                            <h5 class="card-title text-primary">@book.Title</h5>
                            <p class="card-text"><strong>Author:</strong> @book.Author</p>

                            @if (!string.IsNullOrEmpty(book.Format))
                            {
                                <p class="card-text"><strong>Format:</strong> @book.Format</p>
                            }

                            <!-- Borrow Status -->
                            @if (book.IsBorrowed)
                            {
                                <p class="text-warning">
                                    <strong>Borrowed</strong>
                                    (Remaining Time:
                                    @(book.BorrowEndDate.HasValue
                                        ? (book.BorrowEndDate.Value - DateTime.Now).Days + " days"
                                        : "N/A"))
                                </p>
                            }

                            <!-- Download Button -->
                            @if (!string.IsNullOrEmpty(book.Format))
                            {
                                <form method="get" action="/PersonalLibrary/DownloadBook" class="mt-auto">
                                    @Html.AntiForgeryToken()
                                    <input type="hidden" name="bookId" value="@book.BookId" />
                                    <button type="submit" class="btn btn-success w-100">
                                        Download (@book.Format)
                                    </button>
                                </form>
                            }
                            else
                            {
                                <p class="text-muted">No format available for this book.</p>
                            }

                            <!-- Delete Button -->
                            @if (book.IsOwned)
                            {
                                <form method="post" action="/User/DeleteBook" class="mt-3">
                                    @Html.AntiForgeryToken()
                                    <input type="hidden" name="bookId" value="@book.BookId" />
                                    <button type="submit" class="btn btn-danger w-100"
                                            onclick="return confirm('Are you sure you want to delete this book?');">
                                        Delete
                                    </button>
                                </form>
                            }

                            <!-- Rating Section -->
                            <form method="post" action="/User/RateBook" class="mt-3">
                                @Html.AntiForgeryToken()
                                <input type="hidden" name="bookId" value="@book.BookId" />
                                <label for="rating-@book.BookId" class="form-label"><strong>Rate this book:</strong></label>
                                <select id="rating-@book.BookId" name="rating" class="form-select">
                                    <option value="1">1</option>
                                    <option value="2">2</option>
                                    <option value="3">3</option>
                                    <option value="4">4</option>
                                    <option value="5">5</option>
                                </select>
                                <button type="submit" class="btn btn-primary w-100 mt-2">Submit Rating</button>
                            </form>
                        </div>
                    </div>
                </div>
            }
        </div>
    }
</div>
